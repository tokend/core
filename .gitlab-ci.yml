# docker-in-docker allows to build and publish docker images
services:
  - docker:dind

variables:
  IMAGE_NAME: registry.gitlab.com/tokend/core
  # buildbase tags are misleading, blame legacy for that
  # * `latest` is old one
  # * `2` is actual second version
  BUILD_BASE_IMAGE: $IMAGE_NAME/buildbase:2
  BUILD_IMAGE: corebuild
  BUILD_DOCKERFILE: build.dockerfile
  LEGACY_IMAGE: $IMAGE_NAME:$CI_COMMIT_SHA
  LEGACY_DOCKERFILE: legacy.dockerfile
  PG_IMAGE: $IMAGE_NAME:pg-$CI_COMMIT_SHA
  PG_DOCKERFILE: pg.dockerfile
  DH_IMAGE: tokend/core

stages:
  - buildbase
  - build
  - publish

build-base-image:
  image: docker:latest
  stage: buildbase
  only:
    refs:
      - master
      - feature/docker-healthcheck
    changes:
      - buildbase.dockerfile
  tags:
    - tokend
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build --pull -t $BUILD_BASE_IMAGE -f buildbase.dockerfile .
    - docker push $BUILD_BASE_IMAGE

build:
  image: docker:latest
  stage: build
  tags:
    - tokend
  script:
    - version=$(test -z $CI_COMMIT_TAG && echo $CI_COMMIT_SHA || echo $CI_COMMIT_TAG)
    # login to docker registry
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    # build intermediate binary base
    - docker build --pull --build-arg RSA_KEY="$SSH_PRIVATE_KEY" --build-arg VERSION="$version" -t $BUILD_IMAGE -f $BUILD_DOCKERFILE .
    # legacy container
    - docker build -t $LEGACY_IMAGE -f $LEGACY_DOCKERFILE .
    - docker push $LEGACY_IMAGE
    # new container
    - docker pull registry.gitlab.com/tokend/deployment/postgres-ubuntu:9.6
    - docker build -t $PG_IMAGE -f $PG_DOCKERFILE .
    - docker push $PG_IMAGE

publish dockerhub:
  image: docker:latest
  stage: publish
  tags:
    - tokend
  only:
    - /^.+\..+\..+$/
  script:
    - RELEASE=$CI_COMMIT_REF_NAME
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PWD
    - docker pull $PG_IMAGE
    - docker tag $PG_IMAGE $DH_IMAGE:$RELEASE
    - docker push $DH_IMAGE:$RELEASE
